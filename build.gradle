/**
 * Gradle plugins
 */
plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

/**
 * Project Variables
 */
group = 'com.avrix'
version = '0.0.1'

/**
 * Path to the compiled Jar file
 */
def buildPath = System.getenv('BUILD_PATH') ?: 'build';

/**
 * Repositories for project dependencies
 */
repositories {
    mavenCentral()
}

/**
 * Project Dependencies
 */
dependencies {
    /**
     * Project Zomboid
     * Dependencies are created via the Gradle task 'createZombieJar'
     */
    compileOnly files('/libs/ProjectZomboid-core-41.78.16.jar')

    /**
     * Utils
     */
    implementation('org.yaml:snakeyaml:2.2')
    implementation('org.javassist:javassist:3.30.2-GA')

    /**
     * Test
     */
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation('org.junit.jupiter:junit-jupiter')
}

/**
 * Project testing
 */
test {
    jvmArgs '-Djdk.attach.allowAttachSelf=true'
    useJUnitPlatform()
}

/**
 * Creating a Jar file wrapper (core) to run a game server
 */
shadowJar {
    archiveFileName.set("${rootProject.name}-Core-${version}.jar")
    destinationDirectory.set(file(buildPath))

    manifest {
        attributes(
                'Implementation-Title': rootProject.name,
                'Implementation-Version': version,
                'Agent-Class': 'com.avrix.agent.Agent',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'true'
        )
    }
}

/**
 * Building a Jar archive with documentation
 */
tasks.register('buildJar') {
    dependsOn generateJavaDoc
    finalizedBy shadowJar
}

/**
 * Generating JavaDoc for Jar archive
 */
tasks.register('generateJavaDoc', Javadoc) {
    source = sourceSets.main.java.srcDirs
    classpath = configurations.compileClasspath
    destinationDir = file("docs/javadoc")
}

/**
 * Task for creating a JAR file named 'ProjectZomboid-core-41.78.16.jar' from the contents of a specified folder.
 * For example path: C:\Steam\steamapps\common\Project Zomboid Dedicated Server\java\zombie
 *
 * This Gradle task performs the following steps:
 * 1. Retrieves the path to the source folder from the 'ZOMBIE_FOLDER_PATH' environment variable.
 * 2. If the environment variable is set and not empty:
 *    a. Creates a temporary directory 'tempDir/zombie' and copies the contents of the source folder into it.
 *    b. Uses the 'jar' command to create a JAR file from the contents of the 'tempDir' directory.
 *    c. Creates a 'libs' directory in the project root if it does not exist.
 *    d. Moves the generated JAR file to the 'libs' directory.
 *    e. Deletes the temporary directory 'tempDir'.
 * 3. If the environment variable is not set or is empty, prints a message indicating that the variable is not set or empty.
 */
tasks.register('createZombieJar') {
    doLast {
        def zombieFolder = System.getenv("ZOMBIE_FOLDER_PATH")
        def archiveName = 'ProjectZomboid-core-41.78.16.jar'

        if (zombieFolder != null && !zombieFolder.isEmpty()) {
            def tempDir = file('tempDir')
            def tempDirZombie = file('tempDir/zombie')
            copy {
                from zombieFolder
                into tempDirZombie
            }

            exec {
                commandLine 'jar', 'cvf', archiveName, '-C', tempDir, '.'
            }

            def libsFolder = './libs'
            file(libsFolder).mkdirs()
            file(archiveName).renameTo(new File(libsFolder, archiveName))

            delete tempDir
        } else {
            println "The ZOMBIE_FOLDER_PATH environment variable is not set or empty."
        }
    }
}